{
    "SetRfChannelInfo": {
        "fields":[
            "rf_channel"
        ],
        "packets":[
            "SetRfChannelSensorNode",
            "SetRfChannelTransNode"
        ]
    },
    "GetCablePeaksSampleData": {
        "fields": [
            "odr",
            "range",
            "axis"
        ],
        "packets": [
            "GetCablePeaksHCF100",
            "GetCablePeaksHCF4000"
        ]
    },
    "GetVibSampleData": {
        "fields":[
            "odr",
            "range",
            "axis",
            "period"
        ],
        "packets":[
            "GetVibraHCF300",
            "GetVibraHCF3000",
            "GetVibraHCF4000",
            "GetVibraWireHFS400"
        ]
    },
    "GetVibraWireSampleData":{
        "fields":[
            "channel_bit",
            "sample_pattern",
            "local_channel_bit",
            "ext_channel_bit"
        ],
        "packets":[
            "GetVibraWireHFS200",
            "GetVibraWireHFS200V1",
            "GetVibraWireHFS316",
            "GetVibraWireHFS500V1",
            "GetVibraWireHFS530"
        ]
    },
    "GetElectricityHIS100":{
        "fields":[
            "channel_bit",
            "odr",
            "period",
            "is_continuous",
            "is_out_power",
            "is_factory_init",
            "is_user_init"
        ],
        "packets":[
            "GetElectricityHIS100"
        ]
    },
    "GetStressHIS300":{
        "fields":[
            "channel",
            "odr",
            "period",
            "is_continuous"
        ],
        "packets":[
            "GetStressHIS300"
        ]
    },
    "GetStressHIS500":{
        "fields":[
            "k_value",
            "odr",
            "period"
        ],
        "packets":[
            "GetStressHIS500"
        ]
    },
    "GetPressHGR100B2":{
        "fields":[
            "sample_pattern"
        ],
        "packets":[
            "GetPressHGR100B2"
        ]
    },
    "GetAnemometerFC307":{
        "fields":[
            "addr"
        ],
        "packets":[
            "GetAnemometerFC307"
        ]
    },
    "GetMonitorIncliHCF420":{
        "fields":[
            "response_time",
            "sample_interval",
            "angle_threshold_1",
            "angle_threshold_2",
            "angle_threshold_3",
            "group"
        ],
        "packets":[
            "GetMonitorIncliHCF420"
        ]
    },
    "SetMainDirectionInclination":{
        "fields":[
            "main_direction"
        ],
        "packets":[
            "SetMainDirectionInclination"
        ]
    },
    "ConfigClockTask":{
        "fields":[
            "is_on_1",
            "hour_1",
            "minute_1",
            "second_1",
            "interval_1",
            "number_1",            
            "is_on_2",
            "hour_2",
            "minute_2",
            "second_2",
            "interval_2",
            "number_2",
            "odr",
            "range",
            "axis",
            "period",
            "def_sample_type",
            "channel_bit",
            "sample_pattern",
            "is_continuous",
            "is_out_power",
            "is_factory_init",
            "is_user_init",
            "k_value",
            "local_channel_bit",
            "ext_channel_bit",
            "odr_s",
            "range_s",
            "axis_s",
            "period_s",
            "def_sample_type_s",
            "channel_bit_s",
            "sample_pattern_s",
            "is_continuous_s",
            "is_out_power_s",
            "is_factory_init_s",
            "is_user_init_s",
            "k_value_s",
            "local_channel_bit_s",
            "ext_channel_bit_s",
            "running_mode",
            "analog_sample_type"
        ],
        "extend_fields":{
            "clock_num":"int32",
            "running_mode_s":"int32",
            "def":"int32",
            "def_s":"int32"
        },
        "packets":[
            "ConfigClockTaskHCF100",
            "ConfigClockTaskHCF200",
            "ConfigClockTaskHCF300",
            "ConfigClockTaskHCF400",
            "ConfigClockTaskHCF500",
            "ConfigClockTaskHCF600",
            "ConfigClockTaskHIS800",
            "ConfigClockTaskHCF2000",
            "ConfigClockTaskHCF3000",
            "ConfigClockTaskHCF4000",
            "ConfigClockTaskHFS200",
            "ConfigClockTaskHFS200V1",
            "ConfigClockTaskHFS400",
            "ConfigClockTaskHFS316",
            "ConfigClockTaskHIS100",
            "ConfigClockTaskHIS300",
            "ConfigClockTaskHIS500",
            "ConfigClockTaskHGR100B2",
            "ConfigClockTaskHFS500",
            "ConfigClockTaskHCF910",
            "ConfigClockTaskGRTU1000",
            "ConfigClockTaskFC307",
            "ConfigClockTaskHFS530",
            "ConfigClockTaskDTUC",
            "ConfigClockTaskHIS400"
        ],
        "extend_packets": [
            "ConfigClockTaskHNF4010"
        ]
    },
    "SetTriggerConfigInfo":{
        "fields":[
            "is_set_trigger",
            "monitor_odr",
            "monitor_axis",
            "trigger_odr",
            "trigger_axis",
            "trigger_range",
            "trigger_sensitivity",
            "trigger_threshold",
            "trigger_period"
        ],
        "packets":[
            "SetTriggerConfigHCF300",
            "SetTriggerConfigHCF4000"
        ]
    },
    "SimpleSampleHIS700":{
        "fields":[
            "disconnect_timeout"
        ],
        "packets":[
            "GetWinderCupSampleHCF910RS"
        ]
    },
    "OnceInstructionHIS700":{
        "fields":[
            "addr",
            "disconnect_timeout"
        ],
        "packets":[
            "GetAnemometerHCF920RS",
            "GetMeteorologyHCF930RS",
            "GetCH4HOS3000CH4RS",
            "GetShapeArrayHCF1100RS",
            "GetTempHumiHOS9010RS",
            "GetCH4HOS3000CH4RS"
        ]
    },
    "TwiceInstructionHIS700":{
        "fields":[
            "addr",
            "disconnect_timeout",
            "sample_collect_interval"
        ],
        "packets":[
            "GetVibraWireHFS316RS",
            "GetVibraWireHFS716RS",
            "GetDistanceHOS910030RS",
            "GetSettlementHCF700RS"
        ]
    },
    "HIS700AutoSample":{
        "fields":[
            "is_on",
            "sample_collect_interval",
            "auto_sample_interval",
            "disconnect_timeout"
        ],
        "packets":[
            "HIS700AutoSample"
        ]
    },
    "SetStdNodeHGR100B2":{
        "fields":[
            "reference_node"
        ],
        "packets":[
            "SetStdNodeHGR100B2"
        ]
    },
    "SetBaudrateHIS700":{
        "fields":[
            "baudrate"
        ],
        "packets":[
            "SetBaudrateHIS700"
        ]
    },
    "SetChannelConfigHFS316":{
        "fields":[
            "channel_config_bit"
        ],
        "packets":[
            "SetChannelConfigHFS316"
        ]
    },
    "GetGatewayCtrlInfo":{
        "fields":null,
        "extend_fields":{
            "command": "string"
        },
        "packets":[
            "GetGatewayCtrlInfo"
        ]
    },
    "AddCalibrationHCF2000":{
        "fields":[
            "temp",
            "offset"
        ],
        "packets":[
            "AddCaliHCF2000"
        ]
    },
    "RegistryOpHCF700HGR100B2": {
        "fields":[
            "addr"
        ],
        "packets":[
            "ReadHoldRegHCF700HGR100B2",
            "ReadInputRegHCF700HGR100B2",
            "InitPressHGR100B2"
        ]
    },
    "SetHoldRegHCF700HGR100B2": {
        "fields":[
            "dest_addr",
            "set_addr",
            "channel_bit",
            "init_value",
            "density",
            "g_value",
            "full_adc_value",
            "zero_adc_value",
            "full_sensor_value"
        ],
        "packets":[
            "SetHoldRegHCF700HGR100B2"
        ]
    },
    "SetIncliCalibration": {
        "fields":[
            "incli_marked",
            "main_direction",
            "origin_x",
            "origin_y",
            "origin_z"
        ],
        "packets":[
            "SetIncliCalibration"
        ]
    },
    "SetChannelFreqInfo": {
        "fields":[
            "channel_freq"
        ],
        "packets":[
            "SetChannelFreqHFS500",
            "SetChannelFreqHFS530"
        ]
    },
    "SetChannelConfigHIS100": {
        "fields":[
            "channel1_config",
            "channel2_config",
            "channel3_config",
            "channel4_config"
        ],
        "packets":[
            "SetChannelConfigHIS100"
        ]
    },
    "SetCaliHIS100": {
        "fields":[
            "channel_bit",
            "number",
            "sensor_data",
            "standard_data"
        ],
        "packets":[
            "SetCaliHIS100"
        ]
    },
    "RemoveCaliHIS100": {
        "fields":[
            "channel_bit"
        ],
        "packets":[
            "RemoveCaliHIS100"
        ]
    },
    "ChangeInstructionHIS700": {
        "fields":[
            "main_type",
            "sub_type",
            "disconnect_timeout",
            "is_operate_eeprom",
            "is_write",
            "is_sample_instruct",
            "instruct_length",
            "instruct"
        ],
        "packets":[
            "InstructionConfigHIS700",
            "ClearInstructionHIS700"
        ]
    },
    "ChangeNodeWhiteListTransNode": {
        "fields":[
            "serial_number"
        ],
        "packets":[
            "AddNodeWhiteListTransNode",
            "RemoveNodeWhiteListTransNode"
        ]
    },
    "CloseWhiteListTransNode": {
        "fields":[
            "close_flag"
        ],
        "packets":[
            "CloseNodeWhiteListTransNode"
        ]
    },
    "AddNodeRSUC":{
        "fields":[
            "sample_ins_type",
            "product_ins_type",
            "product_type",
            "node_type",
            "node_num",
            "addr"
        ],
        "packets":[
            "AddNodeRSUC"
        ]
    },
    "AddOneInsRSUC":{
        "fields":[
            "product_ins_type",
            "product_type",
            "ins_len",
            "ins"
        ],
        "packets":[
            "AddOneInsRSUC"
        ]
    },
    "AddTwoInsRSUC":{
        "fields":[
            "product_ins_type",
            "product_type",
            "sample_ins_len",
            "retrieve_ins_len",
            "ins"
        ],
        "packets":[
            "AddTwoInsRSUC"
        ]
    },
    "DeleteNodeInfoRSUC":{
        "fields":[
            "addr"
        ],
        "packets":[
            "DeleteNodeInfoRSUC"
        ]
    },
    "DeleteInstructionRSUC":{
        "fields":[
            "product_type"
        ],
        "packets":[
            "DeleteInstructionRSUC"
        ]
    },
    "SetSampleParameterRSUC":{
        "fields":[
            "pow_on_interval",
            "retrieve_interval",
            "product_pow_sup_mode",
            "product_pow_sup_vol"
        ],
        "packets":[
            "SetSampleParameterRSUC"
        ]
    },
    "TransparentInstructionRSUC":{
        "fields":[
            "product_type",
            "product_ins_type",
            "data_len",
            "data"
        ],
        "packets":[
            "TransparentInstructionRSUC"
        ]
    },
    "GetSampleDataRSUC":{
        "fields":[
            "addr",
            "sample_ins_type",
            "product_ins_type",
            "product_type"
        ],
        "packets":[
            "GetSampleDataRSUC"
        ]
    },
    "GetAnalogDataALUC":{
        "fields":[
            "analog_sample_type",
            "odr",
            "period"
        ],
        "packets":[
            "GetAnalogDataALUC",
            "GetAnalogDataALUCCont"
        ]
    },
    "SetCalibrationALUC":{
        "fields":[
            "analog_sample_type"
        ],
        "packets":[
            "SetCalibrationALUC"
        ]
    },
    "SetSensorConfigHIS400":{
        "fields":[
            "k_value",
            "s_value"
        ],
        "packets":[
            "SetSensorConfigHIS400"
        ]
    },
    "GetStressData":{
        "fields":[
            "odr"
        ],
        "packets":[
            "GetStressHIS400"
        ]
    },
    "GetRS485DataRSUCCont":{
        "fields":[
            "odr",
            "period"
        ],
        "packets":[
            "GetRS485DataRSUCCont"
        ]
    },
    "SetSampleMode":{
        "fields":[
            "sample_mode"
        ],
        "packets":[
            "SetSampleMode"
        ]
    },
    "SetTransMode":{
        "fields":[
            "send_mode"
        ],
        "packets":[
            "SetTransMode"
        ]
    },
    "SetTriggerConfig":{
        "fields":[
            "wind_threshold",
            "wind_debounce"
        ],
        "packets":[
            "SetTriggerSampleConfigHCF910"
        ]
    },
    "OtaReceivePiece":{
        "fields": null,
        "extend_fields":{
            "filename": "string",
            "piece_num": "int32",
            "piece_size": "int32",
            "piece_data": "string"
        },
        "packets":[
            "OtaSendPiece"
        ]
    },
    "OtaAddFile":{
        "fields": null,
        "extend_fields":{
            "filename": "string",
            "filesize": "int32",
            "is_load": "int32"
            
        },
        "packets":[
            "OtaAddFile"
        ]
    },
    "OtaCancelFile":{
        "fields": null,
        "extend_fields":{
            "filename": "string"
        },
        "packets":[
            "OtaCancelFile"
        ]
    }                                
}
